@model Evently.ViewModels.EventsFormViewModel

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Events"))
{
    @Html.ValidationSummary()
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.EventDate)
        @Html.TextBoxFor(m => m.EventDate, new { @class = "form-control", @Value = "01 Jan 2000" })
        @Html.ValidationMessageFor(m => m.EventDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GenreId)
        @* textboxfor has a few overloads and as a second string you can pass a format string for the date in this instance*@
        @Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Below Types", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreId)
    </div>
    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}